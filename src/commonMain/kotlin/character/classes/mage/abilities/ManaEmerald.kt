package data.abilities.generic

import character.Ability
import character.Proc
import character.Resource
import character.Stats
import data.Constants
import data.model.Item
import data.model.ItemSet
import data.model.Socket
import data.model.SocketBonus
import sim.Event
import sim.EventType
import sim.SimParticipant
import kotlin.random.Random

class ManaEmerald : Ability() {
    companion object {
        const val name = "Mana Emerald"
    }

    override val id: Int = 22044
    override val name: String = Companion.name
    override val icon: String = "inv_misc_gem_stone_01.jpg"
    override fun gcdMs(sp: SimParticipant): Int = 0
    override val castableOnGcd = true
    override val sharedCooldown: SharedCooldown = SharedCooldown.RUNE_OR_MANA_GEM
    override fun cooldownMs(sp: SimParticipant): Int = 120000

    val gemItem = object : Item() {
        override var isAutoGenerated: Boolean = false
        override var id: Int = 22044
        override var name: String = Companion.name
        override var itemLevel: Int = 0
        override var quality: Int = 1
        override var icon: String = ""
        override var itemSet: ItemSet? = null
        override var inventorySlot: Int = 0
        override var itemClass: Constants.ItemClass? = null
        override var itemSubclass: Constants.ItemSubclass? = null
        override var minDmg: Double = 2340.0
        override var maxDmg: Double = 2460.0
        override var speed: Double = 1.0
        override var stats: Stats = Stats()
        override var sockets: Array<Socket> = arrayOf()
        override var socketBonus: SocketBonus? = null
        override var phase: Int = 1
    }

    override fun cast(sp: SimParticipant) {
        val manaRestored = Random.nextInt(gemItem.minDmg.toInt(), gemItem.maxDmg.toInt())
        sp.addResource(manaRestored, Resource.Type.MANA, this)

        // Craft and fire event to send with the proc
        val currentAmount = sp.resources[Resource.Type.MANA]?.currentAmount?.toDouble() ?: 0.0
        val event = Event(
            eventType = EventType.RESOURCE_CHANGED,
            amount = currentAmount,
            delta = manaRestored.toDouble(),
            resourceType = Resource.Type.MANA,
            ability = this
        )

        sp.fireProc(listOf(Proc.Trigger.MAGE_MANA_GEM), listOf(gemItem), null, event)
    }
}
